#!/bin/csh -f

echo "###############################################################################"
echo "#######"
echo "#######     RUNNING THE UNIT TEST FOR COMPONENT CONSSCW"
echo "#######"
echo "###############################################################################"

set system = "consscw"

source unittest.setup.csh
if ( $status != 0 ) exit $status

set TEST_DATA_TGZ = "consscw-3.5_test_data.tar.gz"
set OUTREF_TGZ    = "consscw-3.5_outref.tar.gz"

if ( ! $?DO_NOT_RECREATE_DATA ) then
	source unittest.data.csh
	if ( $status != 0 ) exit $status
endif


######################################################################
#  Now we're ready to run:
#
#  Find out what data should be run by looking in OPUS_WORK/consscw/input

echo "#######     Looping over triggers in opus_work/consinput/input"

foreach trigger (`/bin/ls opus_work/consscw/input/* | /bin/awk -F. '{print $1}' | /bin/awk -F/ '{print $4}' | /bin/sort`)
	echo "###############################################################################"
	echo "######"
	echo "######  RUNNING:  opus_wrapper on pipeline consscw for science window $trigger"
	echo "######"
	echo "######    You should see no errors"
	echo "######"
	${ISDC_ENV}/opus/pipeline_lib/opus_wrapper consscw $trigger ${OPUS_WORK}/${trigger}_consscw.log
	@ exit_status = $status 
	echo "#######     exit status from opus_wrapper was $exit_status"
	if ($exit_status > 0) exit 1
end  # foreach trigger

foreach osf ( `osf_test -p consscw.path -pr dataset`)
	set command = "cleanup.pl --path=consscw --dataset=$osf --level=opus --do_not_confirm"
	echo "#######     Running $command"
	$command     
	if ($status != 0) exit 1
end 

echo "#######     "
echo "###############################################################################"
echo "#######     "
echo "#######     Processing complete.  Moving results to out..."
echo "#######     "

#  move opus_work stuff to check that cleanup.pl worked
#  (don't move pfiles as may be diff and aren't cleaned anyway)
/bin/mkdir -p out/opus_work/consscw
/bin/mv opus_work/consscw/input   out/opus_work/consscw
/bin/mv opus_work/consscw/logs    out/opus_work/consscw
/bin/mv opus_work/consscw/scratch out/opus_work/consscw
/bin/mv opus_work/consscw/obs     out/opus_work/consscw

/bin/mkdir -p out/scw/0024/rev.000
/bin/mkdir -p out/scw/0025/rev.000
/bin/mkdir -p out/idx/scw/raw
/bin/mkdir -p out/idx/rev

#  To avoid unique file errors in dircmp, copy only link, which in fact
#   compies the source file itself.
chdir test_data
foreach index (`/usr/bin/find idx/scw -name \*IDX.fits -print`) 
	/bin/cp $index ../out/${index}
end
chdir ..

#  Because of Unix file systems, must chmod science windows to move them!
#/bin/chmod +w test_data/scw/*/0*
#  and the logs dir to move the txt file out
/bin/chmod +w test_data/scw/*/0*			#	040604 - Jake - SCREW 1484
/bin/mv test_data/scw/0024/00* out/scw/0024
/bin/mv test_data/scw/0025/00* out/scw/0025

#  Move osm part of rev for HK averages.
/bin/mv test_data/scw/0024/rev.000/osm out/scw/0024/rev.000
/bin/mv test_data/scw/0025/rev.000/osm out/scw/0025/rev.000

#  but we don't want these in the comparison;  always different
/bin/mv out/scw/*/*/*_???.txt test_data		#	040604 - Jake - SCREW 1484

echo "#######     "
echo "#######     NOTE:  isdc_dircmp should find NO differences."
echo "#######     "
echo "#######     DONE"

exit

#	last line
